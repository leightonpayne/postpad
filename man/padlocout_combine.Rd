% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/legacy.R
\name{padlocout_combine}
\alias{padlocout_combine}
\alias{padlocout_uncombine}
\title{Combine and uncombine a list of padlocout tables}
\usage{
padlocout_combine(padlocout_list)

padlocout_uncombine(combined_padlocout)
}
\arguments{
\item{padlocout_list}{A list of padlocout tables (as read in by
\code{\link[=multi_read_padlocout]{multi_read_padlocout()}}).}

\item{combined_padlocout}{A combined padlocout table as constructed with
\code{\link[=padlocout_combine]{padlocout_combine()}}.}
}
\value{
A combined padlocout table, introducing a new row \code{genome_accession},
which is derived from the names of the padlocout tables in \code{padlocout_list}.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}
This function was deprecated as the same functionality can be achieved by
using the \code{.id} argument of \code{\link[dplyr:bind_rows]{dplyr::bind_rows()}}.
Combining and uncombining padlocout tables changes their form from a list of
data frames to a data frame and vice-versa.

Combining padlocout tables can be useful for several reasons:
\itemize{
\item Multiple padlocout tables can be read using \code{\link[=multi_read_padlocout]{multi_read_padlocout()}},
combined with \code{\link[=padlocout_combine]{padlocout_combine()}}, and written to a single file with
\code{\link[=write_padlocout]{write_padlocout()}}).
\item Storing multiple padlocout tables as a single data frame is more memory
efficient than as a list of data frames.
\item Performing operations on all padlocout tables at once, for example
summarising defence system counts, distribution, etc.
\item If there are multiple padlocout tables for a single genome, combining
them with \code{\link[=padlocout_combine]{padlocout_combine()}} and then uncombining them again with
\code{\link[=padlocout_uncombine]{padlocout_uncombine()}} will group them into a single list element.
}

Returning padlocout tables to an uncombined state can also be useful for:
\itemize{
\item Performing operations on each padlocout table individually with the
\code{\link[purrr:map]{purrr::map()}} or \code{\link[base:apply]{base::apply()}} family of functions.
}
}
